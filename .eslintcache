[{"/home/quinn/Desktop/projects/hhbc-project/src/index.js":"1","/home/quinn/Desktop/projects/hhbc-project/src/reportWebVitals.js":"2","/home/quinn/Desktop/projects/hhbc-project/src/App.js":"3","/home/quinn/Desktop/projects/hhbc-project/src/components/displayalbums.js":"4","/home/quinn/Desktop/projects/hhbc-project/src/components/signup.js":"5","/home/quinn/Desktop/projects/hhbc-project/src/components/signin.js":"6","/home/quinn/Desktop/projects/hhbc-project/src/components/homepage.js":"7","/home/quinn/Desktop/projects/hhbc-project/src/components/displaypoll.js":"8","/home/quinn/Desktop/projects/hhbc-project/src/components/choosenewalbums.js":"9","/home/quinn/Desktop/projects/hhbc-project/src/components/profile.js":"10"},{"size":500,"mtime":1607717142140,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607717142140,"results":"13","hashOfConfig":"12"},{"size":2763,"mtime":1608766205701,"results":"14","hashOfConfig":"12"},{"size":315,"mtime":1607717142140,"results":"15","hashOfConfig":"12"},{"size":2703,"mtime":1608761079292,"results":"16","hashOfConfig":"12"},{"size":1911,"mtime":1608764500949,"results":"17","hashOfConfig":"12"},{"size":3263,"mtime":1609013201314,"results":"18","hashOfConfig":"12"},{"size":5784,"mtime":1608757737096,"results":"19","hashOfConfig":"12"},{"size":1139,"mtime":1608742532951,"results":"20","hashOfConfig":"12"},{"size":1624,"mtime":1608762697364,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1knr9jp",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/quinn/Desktop/projects/hhbc-project/src/index.js",[],["45","46"],"/home/quinn/Desktop/projects/hhbc-project/src/reportWebVitals.js",[],"/home/quinn/Desktop/projects/hhbc-project/src/App.js",["47","48"],"/home/quinn/Desktop/projects/hhbc-project/src/components/displayalbums.js",[],"/home/quinn/Desktop/projects/hhbc-project/src/components/signup.js",[],"/home/quinn/Desktop/projects/hhbc-project/src/components/signin.js",["49","50"],"import { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nconst axios = require(\"axios\");\n\n\nconst SignIn = (props) => {\n  const initialUserState = {\n    username: \"\",\n    password: \"\",\n  };\n  const [signIn, setSignIn] = useState(initialUserState);\n  const [badTry, setBadTry] = useState(\"none\");\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .post(\"/api/users/login\", signIn)\n      .then(function (response) {\n        setBadTry(\"none\");\n        if (response.data) {\n          history.push('/')\n          window.location.reload(false)\n        }\n      })\n      .catch(function (error) {\n        // console.error(error);\n        setBadTry(\"block\");\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"signIn\">\n        <p style={{ fontWeight: \"bold\", fontSize: \"large\" }}>Sign In</p>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <label>Email</label>\n          <input\n            type=\"email\"\n            onChange={(event) =>\n              setSignIn({\n                username: event.target.value,\n                password: signIn.password,\n              })\n            }\n          ></input>\n          <label>Password</label>\n          <input\n            type=\"password\"\n            onChange={(event) =>\n              setSignIn({\n                username: signIn.username,\n                password: event.target.value,\n              })\n            }\n          ></input>\n\n          <span className=\"badTry\" style={{ display: badTry }}>\n            Incorrect username or password.\n          </span>\n          <button type=\"submit\">Submit</button>\n        </form>\n        {/* <button className=\"signupbutton\" onClick={() => handleSubmit()}>\n          Sign In\n        </button> */}\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","/home/quinn/Desktop/projects/hhbc-project/src/components/homepage.js",[],"/home/quinn/Desktop/projects/hhbc-project/src/components/displaypoll.js",["51"],"import { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport ChooseNewAlbums from \"./choosenewalbums\";\n// import Swal from \"sweetalert2\";\nconst axios = require(\"axios\");\n\n//store votes with user ID instead of name - TODO\nconst DisplayPoll = () => {\n  const [albumState, setAlbumState] = useState([\n    { artist: \"\", title: \"\" },\n    { artist: \"\", title: \"\" },\n    { artist: \"\", title: \"\" },\n  ]);\n\n  const [name, setName] = useState(\"\");\n\n  const getAlbums = () => {\n    axios\n      .get(\"/api/votes/getalbums\")\n      .then(function (response) {\n        setAlbumState([\n          response.data.album1,\n          response.data.album2,\n          response.data.album3,\n        ]);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getAlbums();\n  }, []);\n\n  const [adminVis, setAdminVis] = useState(\"none\");\n  // const [logInVis, setLogInVis] = useState(\"none\");\n  let logInVis = \"none\";\n  const [userVote, setUserVote] = useState();\n  const [allVotes, setAllVotes] = useState([{ album: \"\" }]);\n\n  if (userVote === undefined) {\n    logInVis = \"none\";\n  } else {\n    logInVis = \"block\"\n  }\n\n  let votes0 = allVotes.filter((album) => album.album === albumState[0].title);\n  let voteNames0 = votes0.map((items) => items.user);\n\n  let votes1 = allVotes.filter((album) => album.album === albumState[1].title);\n  let voteNames1 = votes1.map((items) => items.user);\n\n  let votes2 = allVotes.filter((album) => album.album === albumState[2].title);\n  let voteNames2 = votes2.map((items) => items.user);\n\n  const getVotesFromDB = () => {\n    axios\n      .get(\"/api/votes/getvotes\")\n      .then(function (response) {\n        if (response.data.uservote) {\n          setUserVote(response.data.uservote.album);\n        }\n        if (response.data.allVotes) {\n          setAllVotes(response.data.allVotes);\n        }\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  };\n\n  useEffect(() => {\n    getVotesFromDB();\n  }, [albumState]);\n\n  useEffect(() => {\n    //gets user from server\n    axios\n      .get(\"/api/users/getUser\")\n      .then(function (response) {\n        setName(response.data.firstname);\n        // setLogInVis(\"block\");\n        logInVis = \"block\";\n\n        if (response.data.firstname === \"Quinn\") {\n          setAdminVis(\"block\");\n        }\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, []);\n\n  const [selectedAlbum, setSelectedAlbum] = useState([false, false, false]);\n  const sendVotes = () => {\n    let voteInfo = {};\n\n    if (selectedAlbum[0] === true) {\n      voteInfo = { album: albumState[0].title, user: name };\n    } else if (selectedAlbum[1] === true) {\n      voteInfo = { album: albumState[1].title, user: name };\n    } else if (selectedAlbum[2] === true) {\n      voteInfo = { album: albumState[2].title, user: name };\n    }\n\n    axios\n      .post(\"/api/votes/vote\", voteInfo)\n      .then(function (response) {\n        getVotesFromDB();\n      })\n      .catch(function (error) {\n        Swal.fire({\n          title: \"Sign in to vote!\",\n          timer: 5000,\n          icon: \"error\",\n        });\n      });\n  };\n\n  return (\n    //use one form with 3 radio buttons and a submit for voting. Can control radio button state if they have already voted\n    <div>\n\n      <div className=\"pollRules\">\n        <p>To vote, simply select one of the options below and hit submit.</p>\n        <p>\n          If you need to change your vote you can select a different album and\n          hit submit.\n        </p>\n      </div>\n\n      <div className=\"pollIsLogged\" style={{ display: logInVis }}>\n        <h3>You voted for: {userVote}</h3>\n      </div>\n\n      <div className=\"poll\">\n        <form>\n          <div className=\"pollSelections\">\n            <div className=\"voteHolder\">\n              <h3>{albumState[0].title}</h3>\n              <h4>{albumState[0].artist}</h4>\n              <input\n                type=\"radio\"\n                checked={selectedAlbum[0]}\n                onChange={() => setSelectedAlbum([true, false, false])}\n              ></input>\n              <p>{votes0.length}</p>\n              <p>\n                {voteNames0.map((name) => (\n                  <p>{name}</p>\n                ))}\n              </p>\n            </div>\n\n            <div className=\"voteHolder\">\n              <h3>{albumState[1].title}</h3>\n              <h4>{albumState[1].artist}</h4>\n              <input\n                type=\"radio\"\n                checked={selectedAlbum[1]}\n                onChange={() => setSelectedAlbum([false, true, false])}\n              ></input>\n              <p>{votes1.length}</p>\n              <p>\n                {voteNames1.map((name) => (\n                  <p>{name}</p>\n                ))}\n              </p>\n            </div>\n\n            <div className=\"voteHolder\">\n              {/* <h3>{albumState[2].artist + \" - \" + albumState[2].title}</h3> */}\n              <h3>{albumState[2].title}</h3>\n              <h4>{albumState[2].artist}</h4>\n              <input\n                type=\"radio\"\n                checked={selectedAlbum[2]}\n                onChange={() => setSelectedAlbum([false, false, true])}\n              ></input>\n              <p>{votes2.length}</p>\n              <p>\n                {voteNames2.map((name) => (\n                  <p>{name}</p>\n                ))}\n              </p>\n            </div>\n          </div>\n          {/* <button onClick={() => sendVotes()}>Submit</button> */}\n        </form>\n        <button className=\"voteButton\" onClick={() => sendVotes()}>\n          Submit\n        </button>\n      </div>\n      <div style={{ display: adminVis }}>\n        <button onClick={ChooseNewAlbums}>New Albums</button>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayPoll;\n","/home/quinn/Desktop/projects/hhbc-project/src/components/choosenewalbums.js",[],"/home/quinn/Desktop/projects/hhbc-project/src/components/profile.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":15,"column":10,"nodeType":"58","messageId":"59","endLine":15,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":29,"column":9,"nodeType":"58","messageId":"59","endLine":29,"endColumn":15},{"ruleId":"56","severity":1,"message":"61","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":18},{"ruleId":"56","severity":1,"message":"62","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":12},{"ruleId":"63","severity":1,"message":"64","line":84,"column":20,"nodeType":"65","endLine":84,"endColumn":27},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'loggedIn' is assigned a value but never used.","Identifier","unusedVar","'logOut' is assigned a value but never used.","'Redirect' is defined but never used.","'Swal' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'logInVis' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-global-assign","no-unsafe-negation"]